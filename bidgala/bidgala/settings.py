"""
Django settings for bidgala project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!





# Application definition

INSTALLED_APPS = [ 
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'sslserver',
    'django_cron',
    'encrypted_fields',
    'chat',
    'influencer.apps.InfluencerConfig',
    'pages.apps.PagesConfig',
    'accounts.apps.AccountsConfig',
    'content.apps.ContentConfig',
    'products.apps.ProductsConfig',
    'password.apps.PasswordConfig',
    'payments.apps.PaymentsConfig',
    'community.apps.CommunityConfig',
    'cron.apps.CronConfig',
    'orders.apps.OrdersConfig',
    'discover.apps.DiscoverConfig',
    'survey.apps.SurveyConfig',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'staticinline.apps.StaticInlineAppConfig',

    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.facebook',

    'django.contrib.humanize',
    'storages',
    'channels',

]


MIDDLEWARE = [
    # 'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django_session_timeout.middleware.SessionTimeoutMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



SITE_ID = 2
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_EMAIL_VERIFICATION = "none"
SOCIALACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_UNIQUE_EMAIL = True

ACCOUNT_USER_MODEL_EMAIL_FIELD = "email"


# Login redirect
LOGIN_REDIRECT_URL = 'referralcheck'
SOCIALACCOUNT_AUTO_SIGNUP = True


SOCIALACCOUNT_PROVIDERS = \
    {'facebook':
       {'METHOD': 'oauth2',
        'SCOPE': ['email','public_profile', 'user_friends'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'verified',
            'locale',
            'timezone',
            'link',
            'gender',
            'updated_time'],
        'EXCHANGE_TOKEN': True,
        'LOCALE_FUNC': lambda request: 'kr_KR',
        'VERIFIED_EMAIL': True,
        'VERSION': 'v2.4'}}


ROOT_URLCONF = 'bidgala.urls'
ASGI_APPLICATION = 'bidgala.routing.application'

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
    ],
   
   'DEFAULT_AUTHENTICATION_CLASSES': [
    'rest_framework.authentication.TokenAuthentication',
    'rest_framework.authentication.BasicAuthentication',
    'rest_framework.authentication.SessionAuthentication',
   ]
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

# We no longer use it
#WSGI_APPLICATION = 'bidgala.wsgi.application'



# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases




# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = {
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
}


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'bidgala/static'),
                    os.path.join(BASE_DIR, 'accounts/static'),
                    os.path.join(BASE_DIR, 'chat/static'),
                    os.path.join(BASE_DIR, 'community/static'),
                    os.path.join(BASE_DIR, 'content/static'),
                    os.path.join(BASE_DIR, 'discover/static'),
                    os.path.join(BASE_DIR, 'orders/static'),
                    os.path.join(BASE_DIR, 'pages/static'),
                    os.path.join(BASE_DIR, 'password/static'),
                    os.path.join(BASE_DIR, 'payments/static'),
                    os.path.join(BASE_DIR, 'products/static'),
                    ]
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Media Folder Settings

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Setting session
SESSION_EXPIRE_SECONDS = 60 * 1 * 60 * 90
SESSION_EXPIRE_AFTER_LAST_ACTIVITY = True
SESSION_COOKIE_AGE = 60 * 5 * 60 *90


# Messages
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger',

}


# Login url
LOGIN_URL = 'login_user'


# Fixture directory
FIXTURE_DIRS = (os.path.join(BASE_DIR, 'fixtures'),)

# Max upload size
DATA_UPLOAD_MAX_MEMORY_SIZE = None


# Setting-up redis
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('localhost', 6379)],
        },
    },
}


# Cron jobs
CRON_CLASSES = [
    "cron.order_decline.OrderDecline",
]


TWITTER_LINK = 'https://twitter.com/bidgala'
FACEBOOK_LINK = 'https://www.facebook.com/TheBidgala/'
LINKEDIN_LINK = 'https://www.linkedin.com/company/bidgala/'
PINTEREST_LINK = 'https://www.pinterest.ca/bidgala/_created/'
INSTAGRAM_LINK = 'https://www.instagram.com/bidgala/'



# Importing local settings
try:
    from .local_settings import *
except ImportError:
    pass


try:
    from .logger_settings import *
except Exception as e:
    # in case of any error, pass silently.
    pass
